#event.py

from text import gazeta_ly, day_6_eco, Business_Terminology_Classes
from bot_instance import bot
from db import users_db
from config import ADMIN_IDS
from telebot.types import ReplyKeyboardMarkup, KeyboardButton, ReplyKeyboardRemove
import logging
import time
from ban import blacklist

user_timers = {}
# –ù–∞—Å—Ç—Ä–∞–∏–≤–∞–µ–º –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ
logging.basicConfig(level=logging.INFO)

# –°–ø–∏—Å–æ–∫ –∫–ª—É–±–æ–≤ –∏ –∏—Ö –≤–ª–∞–¥–µ–ª—å—Ü–µ–≤
EVENTS = {
    "–ì–∞–∑–µ—Ç–∞ –ª–∏—Ü–µ—è": 7393504121,
    "6 –î–ù–ï–ô –ó–ê–ì–†–Ø–ó–ù–ï–ù–ò–Ø –ú–ò–†–ê": 7393504121,
    "Business Terminology Classes": 7393504121
}

event_info = {
    "–ì–∞–∑–µ—Ç–∞ –ª–∏—Ü–µ—è": gazeta_ly,
    "6 –î–ù–ï–ô –ó–ê–ì–†–Ø–ó–ù–ï–ù–ò–Ø –ú–ò–†–ê": day_6_eco,
    "Business Terminology Classes":Business_Terminology_Classes
}


def ask_event(message):
    """–ó–∞–ø—Ä–∞—à–∏–≤–∞–µ–º –≤—ã–±–æ—Ä –º–µ—Ä–æ–ø—Ä–∏—è—Ç–∏—è"""
    markup = ReplyKeyboardMarkup(resize_keyboard=True)

    # –î–æ–±–∞–≤–ª—è–µ–º –∫–Ω–æ–ø–∫—É "–û—Ç–º–µ–Ω–∏—Ç—å" –≤ —Å–∞–º–æ–µ –Ω–∞—á–∞–ª–æ
    markup.add(KeyboardButton("‚ùå –û—Ç–º–µ–Ω–∏—Ç—å"))

    for event_name in EVENTS.keys():
        markup.add(KeyboardButton(text=event_name))

    bot.send_message(
        message.chat.id,
        "–í—ã–±–µ—Ä–∏—Ç–µ –º–µ—Ä–æ–ø—Ä–∏—è—Ç–∏–µ, –Ω–∞ –∫–æ—Ç–æ—Ä–æ–µ —Ö–æ—Ç–∏—Ç–µ –ø–æ–¥–∞—Ç—å –∑–∞—è–≤–∫—É:",
        reply_markup=markup
    )
    bot.register_next_step_handler(message, process_event_selection)


def process_event_selection(message):
    """–û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º –≤—ã–±–æ—Ä –º–µ—Ä–æ–ø—Ä–∏—è—Ç–∏—è"""
    selected_event = message.text

    if selected_event == "‚ùå –û—Ç–º–µ–Ω–∏—Ç—å":
        bot.send_message(message.chat.id, "–í—ã –æ—Ç–º–µ–Ω–∏–ª–∏ –ø–æ–¥–∞—á—É –∑–∞—è–≤–∫–∏.", reply_markup=ReplyKeyboardRemove())
        return  # –ó–∞–≤–µ—Ä—à–∞–µ–º –ø—Ä–æ—Ü–µ—Å—Å

    if selected_event not in EVENTS:
        bot.send_message(
            message.chat.id,
            "–ù–µ–≤–µ—Ä–Ω—ã–π –≤—ã–±–æ—Ä. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤—ã–±–µ—Ä–∏—Ç–µ –º–µ—Ä–æ–ø—Ä–∏—è—Ç–∏–µ –∏–∑ —Å–ø–∏—Å–∫–∞."
        )
        ask_event(message)  # –ü–æ–≤—Ç–æ—Ä–Ω–æ –ø–æ–∫–∞–∑—ã–≤–∞–µ–º —Å–ø–∏—Å–æ–∫ –º–µ—Ä–æ–ø—Ä–∏—è—Ç–∏–π
        return

    # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –º–µ—Ä–æ–ø—Ä–∏—è—Ç–∏–∏ –∏ –∫–Ω–æ–ø–∫–∏
    markup = ReplyKeyboardMarkup(resize_keyboard=True)
    markup.add(KeyboardButton("‚úÖ –ü–æ–¥–∞—Ç—å –∑–∞—è–≤–∫—É"))
    markup.add(KeyboardButton("üîô –í–µ—Ä–Ω—É—Ç—å—Å—è –Ω–∞–∑–∞–¥"))

    bot.send_message(message.chat.id, event_info[selected_event], reply_markup=markup)
    bot.register_next_step_handler(message, handle_event_action, selected_event)

    """–ó–∞–ø—Ä–∞—à–∏–≤–∞–µ–º –≤—ã–±–æ—Ä –º–µ—Ä–æ–ø—Ä–∏—è—Ç–∏—è"""
    markup = ReplyKeyboardMarkup(one_time_keyboard=True, resize_keyboard=True)
    for event_name in EVENTS.keys():
        markup.add(KeyboardButton(text=event_name))
    bot.send_message(
        message.chat.id,
        "–í—ã–±–µ—Ä–∏—Ç–µ –º–µ—Ä–æ–ø—Ä–∏—è—Ç–∏–µ, –Ω–∞ –∫–æ—Ç–æ—Ä–æ–µ —Ö–æ—Ç–∏—Ç–µ –ø–æ–¥–∞—Ç—å –∑–∞—è–≤–∫—É:",
        reply_markup=markup
    )
    bot.register_next_step_handler(message, process_event_selection)


def process_event_selection(message):
    if message.text == "‚ùå –û—Ç–º–µ–Ω–∏—Ç—å":
        bot.send_message(message.chat.id, "–í—ã –æ—Ç–º–µ–Ω–∏–ª–∏ –æ—Ç–ø—Ä–∞–≤–∫—É —Ä–µ–∑—é–º–µ.", reply_markup=ReplyKeyboardRemove())
        return
    """–û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º –≤—ã–±–æ—Ä –º–µ—Ä–æ–ø—Ä–∏—è—Ç–∏—è"""
    selected_event = message.text

    if selected_event not in EVENTS:
        bot.send_message(
            message.chat.id,
            "–ù–µ–≤–µ—Ä–Ω—ã–π –≤—ã–±–æ—Ä. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤—ã–±–µ—Ä–∏—Ç–µ –º–µ—Ä–æ–ø—Ä–∏—è—Ç–∏–µ –∏–∑ —Å–ø–∏—Å–∫–∞."
        )
        ask_event(message)  # –ü–æ–≤—Ç–æ—Ä–Ω–æ –ø–æ–∫–∞–∑—ã–≤–∞–µ–º —Å–ø–∏—Å–æ–∫ –º–µ—Ä–æ–ø—Ä–∏—è—Ç–∏–π
        return

    # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –º–µ—Ä–æ–ø—Ä–∏—è—Ç–∏–∏ –∏ –∫–Ω–æ–ø–∫–∏
    markup = ReplyKeyboardMarkup(resize_keyboard=True)
    markup.add(KeyboardButton("‚úÖ –ü–æ–¥–∞—Ç—å –∑–∞—è–≤–∫—É"))
    markup.add(KeyboardButton("üîô –í–µ—Ä–Ω—É—Ç—å—Å—è –Ω–∞–∑–∞–¥"))
    bot.send_message(message.chat.id, event_info[selected_event], reply_markup=markup)
    bot.register_next_step_handler(message, handle_event_action, selected_event)


def handle_event_action(message, selected_event):
    """–û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º –≤—ã–±–æ—Ä –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –ø–æ—Å–ª–µ –ø—Ä–æ—Å–º–æ—Ç—Ä–∞ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ –º–µ—Ä–æ–ø—Ä–∏—è—Ç–∏–∏"""
    if message.text == "‚úÖ –ü–æ–¥–∞—Ç—å –∑–∞—è–≤–∫—É":
        bot.send_message(message.chat.id,
                         "–¢–µ–ø–µ—Ä—å –æ—Ç–ø—Ä–∞–≤—å—Ç–µ —Ç–æ, —á—Ç–æ –æ—Ç –≤–∞—Å —Ç—Ä–µ–±—É—é—Ç: (—Ç–µ–∫—Å—Ç, —Ñ–∞–π–ª, —Ñ–æ—Ç–æ, –≤–∏–¥–µ–æ, –≥–æ–ª–æ—Å–æ–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –∏–ª–∏ —Å—Ç–∏–∫–µ—Ä).\n–ï—Å–ª–∏ –º–µ—Ä–æ–ø—Ä–∏—è—Ç–∏–µ –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–æ –Ω–∏—á–µ–≥–æ –Ω–µ —Ç—Ä–µ–±—É–µ—Ç –ø—Ä–æ—Å—Ç–æ –æ—Ç–ø—Ä–∞–≤—å—Ç–µ '.' ",
                         reply_markup=ReplyKeyboardRemove())
        bot.register_next_step_handler(message, handle_resume, selected_event)
    elif message.text == "üîô –í–µ—Ä–Ω—É—Ç—å—Å—è –Ω–∞–∑–∞–¥":
        if message.text == "‚ùå –û—Ç–º–µ–Ω–∏—Ç—å":
            bot.send_message(message.chat.id, "–í—ã –æ—Å—Ç–∞–Ω–æ–≤–∏–ª–∏ –ø—Ä–æ—Ü–µ—Å—Å.", reply_markup=ReplyKeyboardRemove())
            return
        ask_event(message)
    else:
        bot.send_message(message.chat.id, "–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤—ã–±–µ—Ä–∏—Ç–µ –æ–¥–∏–Ω –∏–∑ –¥–æ—Å—Ç—É–ø–Ω—ã—Ö –≤–∞—Ä–∏–∞–Ω—Ç–æ–≤.")
        bot.register_next_step_handler(message, handle_event_action, selected_event)


def handle_resume(message, selected_event):
    if message.text == "‚ùå –û—Ç–º–µ–Ω–∏—Ç—å":
        bot.send_message(message.chat.id, "–í—ã –æ—Ç–º–µ–Ω–∏–ª–∏ –æ—Ç–ø—Ä–∞–≤–∫—É –∑–∞—è–≤–∫–∏.", reply_markup=ReplyKeyboardRemove())
        return
    """–û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º —Ä–µ–∑—é–º–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è"""
    user_info = users_db.get(str(message.chat.id), {})
    event_owner_id = EVENTS[selected_event]

    logging.info(f"–û—Ç–ø—Ä–∞–≤–∫–∞ —Ä–µ–∑—é–º–µ –≤ —á–∞—Ç ID: {event_owner_id}")

    if message.text:
        resume = message.text
        resume_type = "—Ç–µ–∫—Å—Ç"
    elif message.photo:
        resume_type = "—Ñ–æ—Ç–æ"
        file_id = message.photo[-1].file_id
        bot.send_photo(event_owner_id, file_id)
        resume = "–§–æ—Ç–æ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ"
    elif message.video:
        resume_type = "–≤–∏–¥–µ–æ"
        file_id = message.video.file_id
        bot.send_video(event_owner_id, file_id)
        resume = "–í–∏–¥–µ–æ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ"
    elif message.document:
        resume_type = "—Ñ–∞–π–ª"
        file_id = message.document.file_id
        bot.send_document(event_owner_id, file_id)
        resume = "–§–∞–π–ª –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω"
    elif message.voice:
        resume_type = "–≥–æ–ª–æ—Å–æ–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ"
        file_id = message.voice.file_id
        bot.send_voice(event_owner_id, file_id)
        resume = "–ì–æ–ª–æ—Å–æ–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ"
    elif message.sticker:
        resume_type = "—Å—Ç–∏–∫–µ—Ä"
        file_id = message.sticker.file_id
        bot.send_sticker(event_owner_id, file_id)
        resume = "–°—Ç–∏–∫–µ—Ä –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω"
    else:
        bot.send_message(message.chat.id, "–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –æ—Ç–ø—Ä–∞–≤—å—Ç–µ –≤–∞—à–µ —Ä–µ–∑—é–º–µ.")
        return

    event_message = (
        f"–ù–æ–≤–∞—è –∑–∞—è–≤–∫–∞ –Ω–∞ –º–µ—Ä–æ–ø—Ä–∏—è—Ç–∏–µ {selected_event}:\n"
        f"–ò–º—è: {user_info.get('name', '–ù–µ —É–∫–∞–∑–∞–Ω–æ')}\n"
        f"–§–∞–º–∏–ª–∏—è: {user_info.get('surname', '–ù–µ —É–∫–∞–∑–∞–Ω–æ')}\n"
        f"–ì—Ä—É–ø–ø–∞: {user_info.get('group', '–ù–µ —É–∫–∞–∑–∞–Ω–æ')}\n"
        f"Telegram ID: {user_info.get('telegram_id', '–ù–µ —É–∫–∞–∑–∞–Ω–æ')}\n"
        f"Username: @{user_info.get('username', '–ù–µ —É–∫–∞–∑–∞–Ω–æ')}\n\n"
        f"–†–µ–∑—é–º–µ ({resume_type}): {resume}"
    )

    try:
        bot.send_message(event_owner_id, event_message, parse_mode="HTML")
    except Exception as e:
        logging.error(f"–û—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ —Ä–µ–∑—é–º–µ: {e}")
        bot.send_message(message.chat.id, "–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ —Ä–µ–∑—é–º–µ. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ.")
        return

    bot.send_message(message.chat.id,
                     f"–í—ã —É—Å–ø–µ—à–Ω–æ –ø–æ–¥–∞–ª–∏ –∑–∞—è–≤–∫—É –Ω–∞ –º–µ—Ä–æ–ø—Ä–∏—è—Ç–∏–µ <b>{selected_event}</b>. –û–∂–∏–¥–∞–π—Ç–µ –æ–±—Ä–∞—Ç–Ω–æ–π —Å–≤—è–∑–∏!",
                     parse_mode="HTML")
    #bot.send_message(message.chat.id, f"–í—ã —É—Å–ø–µ—à–Ω–æ –ø–æ–¥–∞–ª–∏ –∑–∞—è–≤–∫—É –Ω–∞ –º–µ—Ä–æ–ø—Ä–∏—è—Ç–∏–µ <b>{selected_event}</b> –≤ —Ç–µ—Å—Ç–æ–≤–æ–º —Ä–µ–∂–∏–º–µ –±–æ—Ç–∞, –µ—Å–ª–∏ –±–æ—Ç —Å—Ä–µ–∞–≥–∏—Ä–æ–≤–∞–ª, –∑–Ω–∞—á–∏—Ç—å —Ñ—É–Ω–∫—Ü–∏—è –ø–æ–¥–∞—á–∏ –∑–∞—è–≤–æ–∫ —Ä–∞–±–æ—Ç–∞–µ—Ç!")

    for admin_id in ADMIN_IDS:
        bot.send_message(
            admin_id,
            f"<b>–î–ª—è –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ü–∏–∏</b>\n\n–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å {user_info.get('name')}\n"
            f"–Æ–∑–µ—Ä–Ω–µ–π–º: @{user_info.get('username')}\n"
            f"–ì—Ä—É–ø–ø–∞: {user_info.get('group')}\n"
            f"–£—Å–ø–µ—à–Ω–æ –ø–æ–¥–∞–ª –∑–∞—è–≤–∫—É –≤ –∏–≤–µ–Ω—Ç(—Å–æ–±—ã—Ç–∏–µ) {selected_event}. \n\n"
            f"–†–µ–∑—é–º–µ ({resume_type}): {resume} ",
            parse_mode="HTML")


@bot.message_handler(commands=['apply_event'])
def apply_event(message):
    user_id = message.from_user.id
    current_time = time.time()

    if user_id in user_timers and current_time - user_timers[user_id] < 10:
        return  # –ü—Ä–æ—Å—Ç–æ –∏–≥–Ω–æ—Ä–∏—Ä—É–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ

    user_timers[user_id] = current_time
    if message.from_user.id in blacklist:
        return  # –ò–≥–Ω–æ—Ä–∏—Ä—É–µ–º –∫–æ–º–∞–Ω–¥—É, –µ—Å–ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –≤ –±–∞–Ω–µ
    """–ö–æ–º–∞–Ω–¥–∞ –¥–ª—è –ø–æ–¥–∞—á–∏ –∑–∞—è–≤–∫–∏ –Ω–∞ –º–µ—Ä–æ–ø—Ä–∏—è—Ç–∏–µ"""
    if str(message.chat.id) not in users_db:
        bot.send_message(message.chat.id,
                         "–í—ã –Ω–µ –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω—ã! –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, —Å–Ω–∞—á–∞–ª–∞ –ø—Ä–æ–π–¥–∏—Ç–µ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—é —Å –ø–æ–º–æ—â—å—é –∫–æ–º–∞–Ω–¥—ã /start.")
        return
    ask_event(message)

print("–ú–æ–¥—É–ª—å events –∑–∞–≥—Ä—É–∂–µ–Ω")