#library.py
import time
from ban import blacklist
BOOKS = [
    {"title": "–Ø–Ω–≤–∞—Ä—å—Å–∫–∏–π –≤—ã–ø—É—Å–∫ –≥–∞–∑–µ—Ç—ã - 2025", "message_id": 46},
    {"title": "–ê–ª–≥–µ–±—Ä–∞ 10 –∫–ª–∞—Å—Å. –†–£", "message_id": 9},
    {"title": "–ë–∏–æ–ª–æ–≥–∏—è 10 –∫–ª–∞—Å—Å. –†–£", "message_id": 10},
    {"title": "–û–ì–ü 10 –∫–ª–∞—Å—Å. –†–£", "message_id": 11},
    {"title": "–ì–µ–æ–≥—Ä–∞—Ñ–∏—è 10 –∫–ª–∞—Å—Å. –†–£", "message_id": 13},
    {"title": "–ì–µ–æ–º–µ—Ç—Ä–∏—è 10 –∫–ª–∞—Å—Å. –†–£", "message_id": 14},
    {"title": "–ò–Ω—Ñ–æ—Ä–º–∞—Ç–∏–∫–∞ 10 –∫–ª–∞—Å—Å. –†–£", "message_id": 15},
    {"title": "–í—Å–µ–º–∏—Ä–Ω–∞—è –∏—Å—Ç–æ—Ä–∏—è 10 –∫–ª–∞—Å—Å. –†–£", "message_id": 16},
    {"title": "–•–∏–º–∏—è 10 –∫–ª–∞—Å—Å. –†–£", "message_id": 17},
    {"title": "–£–∑–±–µ–∫—Å–∫–∏–π —è–∑—ã–∫ 10 –∫–ª–∞—Å—Å. –†–£", "message_id": 18},
    {"title": "–ò—Å—Ç–æ—Ä–∏—è –£–∑–±–µ–∫–∏—Å—Ç–∞–Ω–∞ 10 –∫–ª–∞—Å—Å. –†–£", "message_id": 19},
    {"title": "–†—É—Å—Å–∫–∏–π —è–∑—ã–∫ 10 –∫–ª–∞—Å—Å. –†–£", "message_id": 20},
    {"title": "–ú–∞—Ç–µ–º–∞—Ç–∏–∫–∞ —á–∞—Å—Ç—å 1 - 11 –ö–ª–∞—Å—Å. –†–£", "message_id": 22},
    {"title": "–ú–∞—Ç–µ–º–∞—Ç–∏–∫–∞ —á–∞—Å—Ç—å 2 - 11 –ö–ª–∞—Å—Å. –†–£", "message_id": 23},
    {"title": "–ê—Å—Ç—Ä–æ–Ω–æ–º–∏—è - 11 –ö–ª–∞—Å—Å. –†–£", "message_id": 24},
    {"title": "–ë–∏–æ–ª–æ–≥–∏—è - 11 –ö–ª–∞—Å—Å. –†–£", "message_id": 26},
    {"title": "–û–ì–ü - 11 –ö–ª–∞—Å—Å. –†–£", "message_id": 27},
    {"title": "–§–∏–∑–∏–∫–∞ - 11 –ö–ª–∞—Å—Å. –†–£", "message_id": 28},
    {"title": "–í—Å–µ–º–∏—Ä–Ω–∞—è –∏—Å—Ç–æ—Ä–∏—è - 11 –ö–ª–∞—Å—Å. –†–£", "message_id": 29},
    {"title": "–õ–∏—Ç–µ—Ä–∞—Ç—É—Ä–∞ —á–∞—Å—Ç—å 1 - 11 –ö–ª–∞—Å—Å. –†–£", "message_id": 30},
    {"title": "–õ–∏—Ç–µ—Ä–∞—Ç—É—Ä–∞ —á–∞—Å—Ç—å 2 - 11 –ö–ª–∞—Å—Å. –†–£", "message_id": 31},
    {"title": "–£–∑–±–µ–∫—Å–∫–∏–π —è–∑—ã–∫ - 11 –ö–ª–∞—Å—Å. –†–£", "message_id": 32},
    {"title": "–ò—Å—Ç–æ—Ä–∏—è –£–∑–±–µ–∫–∏—Å—Ç–∞–Ω–∞ - 11 –ö–ª–∞—Å—Å. –†–£", "message_id": 33},
    {"title": "–†—É—Å—Å–∫–∏–π —è–∑—ã–∫ - 11 –ö–ª–∞—Å—Å. –†–£", "message_id": 34},
    {"title": "–û—Å–Ω–æ–≤—ã –ø—Ä–µ–¥–ø—Ä–∏–Ω–∏–º–∞—Ç–µ–ª—å—Å—Ç–≤–∞ - 11 –ö–ª–∞—Å—Å. –†–£", "message_id": 35},
    {"title": "–°–∞–º–∞—Ä–∫–∞–Ω–¥—Å–∫–∏–π –≤–µ—Å—Ç–Ω–∏–∫", "message_id": 37},
    {"title": "–í–µ—Å—Ç–Ω–∏–∫ üìï —á–∞—Å—Ç—å 1", "message_id": 38},
    {"title": "–í–µ—Å—Ç–Ω–∏–∫ üìï —á–∞—Å—Ç—å 2", "message_id": 39},
    {"title": "–ò–Ω—Ñ–æ—Ä–º–∞—Ç–∏–∫–∞ - 11 –∫–ª–∞—Å—Å. –†–£", "message_id": 44},
]


from bot_instance import *
from telebot.types import InlineKeyboardMarkup, InlineKeyboardButton, InlineQueryResultArticle, InputTextMessageContent
user_timers = {}

CHANNEL_ID = -1002302327144  # –ó–∞–º–µ–Ω–∏ –Ω–∞ ID —Å–≤–æ–µ–≥–æ –∫–∞–Ω–∞–ª–∞


# ======= üìö –û–ë–´–ß–ù–ê–Ø –ë–ò–ë–õ–ò–û–¢–ï–ö–ê (–ø–æ —Å—Ç—Ä–∞–Ω–∏—Ü–∞–º) =======
def get_books_markup(page=0, per_page=9):
    markup = InlineKeyboardMarkup()
    start = page * per_page
    end = start + per_page
    books_on_page = BOOKS[start:end]

    for book in books_on_page:
        markup.add(InlineKeyboardButton(book["title"], callback_data=f"book_{book['message_id']}"))

    if end < len(BOOKS):
        markup.add(InlineKeyboardButton(">>>>>", callback_data=f"next_{page+1}"))

    if page > 0:
        markup.add(InlineKeyboardButton("<<<<<", callback_data=f"prev_{page-1}"))

    return markup

@bot.message_handler(commands=['library'])
def show_library(message):
    if message.from_user.id in blacklist:
        return  # –ò–≥–Ω–æ—Ä–∏—Ä—É–µ–º –∫–æ–º–∞–Ω–¥—É, –µ—Å–ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –≤ –±–∞–Ω–µ
    user_id = message.from_user.id
    current_time = time.time()

    if user_id in user_timers and current_time - user_timers[user_id] < 10:
        return  # –ü—Ä–æ—Å—Ç–æ –∏–≥–Ω–æ—Ä–∏—Ä—É–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ

    user_timers[user_id] = current_time
    bot.send_message(message.chat.id, "üìö –ë–∏–±–ª–∏–æ—Ç–µ–∫–∞:", reply_markup=get_books_markup())

@bot.callback_query_handler(func=lambda call: call.data.startswith("book_"))
def send_book(call):
    """–ü–µ—Ä–µ—Å—ã–ª–∞–µ—Ç –∫–Ω–∏–≥—É –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é."""
    message_id = int(call.data.split("_")[1])
    bot.forward_message(call.from_user.id, CHANNEL_ID, message_id)

@bot.callback_query_handler(func=lambda call: call.data.startswith("next_"))
def next_page(call):
    """–ü–µ—Ä–µ–ª–∏—Å—Ç—ã–≤–∞–µ—Ç —Å—Ç—Ä–∞–Ω–∏—Ü—É –≤–ø–µ—Ä–µ–¥."""
    page = int(call.data.split("_")[1])
    bot.edit_message_reply_markup(call.message.chat.id, call.message.message_id, reply_markup=get_books_markup(page))

@bot.callback_query_handler(func=lambda call: call.data.startswith("prev_"))
def prev_page(call):
    """–ü–µ—Ä–µ–ª–∏—Å—Ç—ã–≤–∞–µ—Ç —Å—Ç—Ä–∞–Ω–∏—Ü—É –Ω–∞–∑–∞–¥."""
    page = int(call.data.split("_")[1])
    bot.edit_message_reply_markup(call.message.chat.id, call.message.message_id, reply_markup=get_books_markup(page))

# ======= üîç –ò–ù–õ–ê–ô–ù –ü–û–ò–°–ö =======
@bot.inline_handler(lambda query: len(query.query) > 2)
def inline_search(query):
    """–û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç –∏–Ω–ª–∞–π–Ω-–∑–∞–ø—Ä–æ—Å—ã –∏ –∏—â–µ—Ç –∫–Ω–∏–≥–∏ –ø–æ –Ω–∞–∑–≤–∞–Ω–∏—é."""
    results = []
    search_text = query.query.lower()

    for book in BOOKS:
        if search_text in book["title"].lower():
            result = InlineQueryResultArticle(
                id=str(book["message_id"]),
                title=book["title"],
                input_message_content=InputTextMessageContent(f"üìñ {book['title']}"),
                reply_markup=get_inline_book_button(book["message_id"])
            )
            results.append(result)

    if not results:
        results.append(InlineQueryResultArticle(
            id="not_found",
            title="–ù–∏—á–µ–≥–æ –Ω–µ –Ω–∞–π–¥–µ–Ω–æ",
            input_message_content=InputTextMessageContent("–ö–Ω–∏–≥–∞ –Ω–µ –Ω–∞–π–¥–µ–Ω–∞ üìö"),
        ))

    bot.answer_inline_query(query.id, results, cache_time=1)

def get_inline_book_button(message_id):
    """–°–æ–∑–¥–∞–µ—Ç inline-–∫–Ω–æ–ø–∫—É –¥–ª—è –ø–µ—Ä–µ—Å—ã–ª–∫–∏ –∫–Ω–∏–≥–∏."""
    markup = InlineKeyboardMarkup()
    markup.add(InlineKeyboardButton("üì• –°–∫–∞—á–∞—Ç—å", callback_data=f"book_{message_id}"))
    return markup

print("–ú–æ–¥—É–ª—å library –∑–∞–≥—Ä—É–∂–µ–Ω")