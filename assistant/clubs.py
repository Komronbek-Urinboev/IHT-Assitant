#clubs.py

from text import infoIHT_BotLab, info_Speaking_Club_IHT, info_Media_and_Design, IHT_Talk_Club, Chess_Club, SU_Frontend_Development_UI_UX_Design, Debate_Club, FC_Club
from bot_instance import bot
from db import users_db
from config import ADMIN_IDS
from telebot.types import InlineKeyboardMarkup, InlineKeyboardButton
from ban import blacklist
import time

user_timers = {}
# –°–ø–∏—Å–æ–∫ –∫–ª—É–±–æ–≤ –∏ –∏—Ö –≤–ª–∞–¥–µ–ª—å—Ü–µ–≤
CLUBS = {
    "IHT BotLab": 7393504121,
    "Speaking Club IHT": 7393504121,
    "Media & Design": 7393504121,
    "IHT Talk Club": 7393504121,
    "Chess Club": 7393504121,
    "SU –ø–æ Frontend Development –∏ UI/UX Design": 7393504121,
    "Debate Club": 7393504121,
    "Football Club": 7393504121
}

# –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –∫–ª—É–±–∞—Ö
club_info = {
    "IHT BotLab": infoIHT_BotLab,
    "Speaking Club IHT": info_Speaking_Club_IHT,
    "Media & Design": info_Media_and_Design,
    "IHT Talk Club":IHT_Talk_Club,
    "Chess Club": Chess_Club,
    "SU –ø–æ Frontend Development –∏ UI/UX Design": SU_Frontend_Development_UI_UX_Design,
    "Debate Club": Debate_Club,
    "Football Club": FC_Club
}

@bot.message_handler(commands=['choose_club'])
def choose_club(message):
    user_id = message.from_user.id
    current_time = time.time()

    if user_id in user_timers and current_time - user_timers[user_id] < 10:
        return  # –ü—Ä–æ—Å—Ç–æ –∏–≥–Ω–æ—Ä–∏—Ä—É–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ

    user_timers[user_id] = current_time
    if message.from_user.id in blacklist:
        return  # –ò–≥–Ω–æ—Ä–∏—Ä—É–µ–º –∫–æ–º–∞–Ω–¥—É, –µ—Å–ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –≤ –±–∞–Ω–µ
    """–ö–æ–º–∞–Ω–¥–∞ –¥–ª—è –≤—ã–±–æ—Ä–∞ –∫–ª—É–±–∞"""
    if str(message.chat.id) not in users_db:
        bot.send_message(
            message.chat.id,
            "–í—ã –Ω–µ –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω—ã! –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, —Å–Ω–∞—á–∞–ª–∞ –ø—Ä–æ–π–¥–∏—Ç–µ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—é —Å –ø–æ–º–æ—â—å—é –∫–æ–º–∞–Ω–¥—ã /start."
        )
        return

    show_club_options(message)

def show_club_options(message):
    """–û—Ç–ø—Ä–∞–≤–ª—è–µ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é —Å–ø–∏—Å–æ–∫ –∫–ª—É–±–æ–≤ –≤ –≤–∏–¥–µ Inline-–∫–Ω–æ–ø–æ–∫"""
    markup = InlineKeyboardMarkup()
    for club_name in CLUBS.keys():
        markup.add(InlineKeyboardButton(text=club_name, callback_data=f"club_{club_name}"))

    bot.send_message(
        message.chat.id,
        "–í—ã–±–µ—Ä–∏—Ç–µ –∫–ª—É–±, –≤ –∫–æ—Ç–æ—Ä—ã–π —Ö–æ—Ç–∏—Ç–µ –ø–æ–¥–∞—Ç—å –∑–∞—è–≤–∫—É:",
        reply_markup=markup
    )

@bot.callback_query_handler(func=lambda call: call.data.startswith("club_"))
def show_club_info(call):
    """–û—Ç–ø—Ä–∞–≤–ª—è–µ—Ç –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –≤—ã–±—Ä–∞–Ω–Ω–æ–º –∫–ª—É–±–µ —Å Inline-–∫–Ω–æ–ø–∫–∞–º–∏"""
    selected_club = call.data.replace("club_", "")

    # Inline-–∫–Ω–æ–ø–∫–∏
    markup = InlineKeyboardMarkup()
    apply_button = InlineKeyboardButton("‚úÖ –ü–æ–¥–∞—Ç—å –∑–∞—è–≤–∫—É", callback_data=f"apply_{selected_club}")
    back_button = InlineKeyboardButton("üîô –í–µ—Ä–Ω—É—Ç—å—Å—è –Ω–∞–∑–∞–¥", callback_data="back_to_clubs")
    markup.add(apply_button, back_button)

    # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –∫–ª—É–±–µ
    bot.edit_message_text(
        chat_id=call.message.chat.id,
        message_id=call.message.message_id,
        text=f"<b>–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –∫–ª—É–±–µ {selected_club}:</b>\n\n{club_info[selected_club]}",
        parse_mode="HTML",
        reply_markup=markup
    )

@bot.callback_query_handler(func=lambda call: call.data == "back_to_clubs")
def back_to_club_selection(call):
    """–û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç –∫–Ω–æ–ø–∫—É '–í–µ—Ä–Ω—É—Ç—å—Å—è –Ω–∞–∑–∞–¥' –∏ —É–¥–∞–ª—è–µ—Ç –ø—Ä–µ–¥—ã–¥—É—â–µ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ"""
    bot.delete_message(call.message.chat.id, call.message.message_id)  # –£–¥–∞–ª—è–µ–º –ø—Ä–µ–¥—ã–¥—É—â–µ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ
    show_club_options(call.message)  # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å–ø–∏—Å–æ–∫ –∫–ª—É–±–æ–≤


@bot.callback_query_handler(func=lambda call: call.data.startswith("apply_"))
def process_club_application(call):
    """–û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç –Ω–∞–∂–∞—Ç–∏–µ –Ω–∞ –∫–Ω–æ–ø–∫—É '–ü–æ–¥–∞—Ç—å –∑–∞—è–≤–∫—É'"""
    selected_club = call.data.replace("apply_", "")

    user_info = users_db.get(str(call.message.chat.id), {})
    club_owner_id = CLUBS[selected_club]

    club_message = (
        f"–ù–æ–≤–∞—è –∑–∞—è–≤–∫–∞ –≤ –∫–ª—É–± {selected_club}:\n"
        f"–ò–º—è: {user_info.get('name', '–ù–µ —É–∫–∞–∑–∞–Ω–æ')}\n"
        f"–§–∞–º–∏–ª–∏—è: {user_info.get('surname', '–ù–µ —É–∫–∞–∑–∞–Ω–æ')}\n"
        f"–ì—Ä—É–ø–ø–∞: {user_info.get('group', '–ù–µ —É–∫–∞–∑–∞–Ω–æ')}\n"
        f"–ü–æ–¥–≥—Ä—É–ø–ø–∞: {user_info.get('in_group', '–ù–µ —É–∫–∞–∑–∞–Ω–æ')}\n"
        f"Telegram ID: {user_info.get('telegram_id', '–ù–µ —É–∫–∞–∑–∞–Ω–æ')}\n"
        f"Username: @{user_info.get('username', '–ù–µ —É–∫–∞–∑–∞–Ω–æ')}\n"
    )

    bot.send_message(club_owner_id, club_message, parse_mode="HTML")

    # –£–≤–µ–¥–æ–º–ª—è–µ–º –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞
    for admin_id in ADMIN_IDS:
        bot.send_message(
            admin_id,
            f"<b>–î–ª—è –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ü–∏–∏</b>\n\n–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å {user_info.get('name')}\n"
            f"–Æ–∑–µ—Ä–Ω–µ–π–º: @{user_info.get('username')}\n"
            f"–ì—Ä—É–ø–ø–∞: {user_info.get('group')}\n"
            f"–£—Å–ø–µ—à–Ω–æ –ø–æ–¥–∞–ª –∑–∞—è–≤–∫—É –≤ –∫–ª—É–± {selected_club}.",
            parse_mode="HTML"
        )

    # –£–≤–µ–¥–æ–º–ª—è–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    bot.edit_message_text(
        chat_id=call.message.chat.id,
        message_id=call.message.message_id,
        text=f"–í—ã —É—Å–ø–µ—à–Ω–æ –ø–æ–¥–∞–ª–∏ –∑–∞—è–≤–∫—É –≤ –∫–ª—É–± <b>{selected_club}</b>. –û–∂–∏–¥–∞–π—Ç–µ –æ–±—Ä–∞—Ç–Ω–æ–π —Å–≤—è–∑–∏!",
        #text=f"–í—ã —É—Å–ø–µ—à–Ω–æ –ø–æ–¥–∞–ª–∏ –∑–∞—è–≤–∫—É –≤ –∫–ª—É–± <b>{selected_club}</b> –≤ —Ç–µ—Å—Ç–æ–≤–æ–º —Ä–µ–∂–∏–º–µ –±–æ—Ç–∞, –µ—Å–ª–∏ –±–æ—Ç —Å—Ä–µ–∞–≥—Ä–∏—Ä–æ–≤–∞–ª, –∑–Ω–∞—á–∏—Ç —Ç—É—Ç –≤—Å–µ —Ä–∞–±–æ—Ç–∞–µ—Ç!",
        parse_mode="HTML"
    )


@bot.callback_query_handler(func=lambda call: call.data == "back_to_clubs")
def back_to_club_selection(call):
    """–û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç –∫–Ω–æ–ø–∫—É '–í–µ—Ä–Ω—É—Ç—å—Å—è –Ω–∞–∑–∞–¥'"""
    show_club_options(call.message)

print("–ú–æ–¥—É–ª—å clubs –∑–∞–≥—Ä—É–∂–µ–Ω")